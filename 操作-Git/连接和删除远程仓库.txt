修改远程仓库地址：
$ git remote set-url origin <remote-url>

仓库路径查询查询：
$ git remote -v

添加远程仓库：
$ git remote add origin <你的项目地址> //注:项目地址形式为:https://gitee.com/xxx/xxx.git或者 git@gitee.com:xxx/xxx.git

删除指定的远程仓库：
$ git remote rm origin

本地初始化一个项目
首先，你需要执行下面两条命令，作为 git 的基础配置，作用是告诉 git 你是谁，你输入的信息将出现在你创建的提交中。

$ git config --global user.name "你的名字或昵称"
$ git config --global user.email "你的邮箱"

然后在你的需要初始化版本库的文件夹中执行：
$ git init 
$ git remote add origin <你的项目地址> //注:项目地址形式为:http://git.oschina.net/xxx/xxx.git或者 git@git.oschina.net:xxx/xxx.git
这样就完成了一次版本你的初始化。

如果你想克隆一个项目，只需要执行：
$ git clone <项目地址>

完成第一次提交


如果仓库中没有任何文件，不能直接使用git push，而应使用下面的代码
$git push --set-upstream origin main

进入你已经初始化好的或者克隆项目的目录，然后执行：
$ git pull origin master
<这里需要修改/添加文件，否则与原文件相比就没有变动>
$ git add .
$ git commit -m "第一次提交"
$ git push origin master
然后如果需要账号密码的话就输入账号密码，这样就完成了一次提交。

此时，你可以在你的个人面板、项目主页查看到你的提交记录，例如：http://git.oschina.net/oschina/gitosc/commit/f3dd1c5bae48fa4244e2595a39e750e5606dd9be

按照本文档新建的项目时，在码云平台仓库上已经存在 readme 文件，故在提交时可能会存在冲突，这时您需要选择的是保留线上的文件或者舍弃线上的文件，如果您舍弃线上的文件，则在推送时选择强制推送，强制推送需要执行下面的命令：
$ git push origin master -f

如果您选择保留线上的 readme 文件，则需要先执行：
$ git pull origin master
修改gitignore之后所作的操作：
$ git rm --cached .gitignore
$ git add .gitignore
$ git commit -m 'update .gitignore'

使用远程代码强制覆盖本地代码：
$ git pull -f

远程分支删除，重命名
删除远程分支在Git v1.7.0 之后，可以使用这种语法删除远程分支：
$ git push origin --delete <branchName>

删除远程tag
$ git push origin --delete tag <tagname>

否则，可以使用这种语法，推送一个空分支到远程分支，其实就相当于删除远程分支：
$ git push origin :<branchName>

这是删除tag的方法，推送一个空tag到远程tag：

$ git tag -d <tagname>
$ git push origin :refs/tags/<tagname>

两种语法作用完全相同。

# 删除不存在对应远程分支的本地分支
假设这样一种情况：
我创建了本地分支b1并pull到远程分支 origin/b1；
其他人在本地使用fetch或pull创建了本地的b1分支；
我删除了 origin/b1 远程分支；
其他人再次执行fetch或者pull并不会删除这个他们本地的 b1 分支，运行 git branch -a 也不能看出这个branch被删除了，如何处理？
使用下面的代码查看b1的状态：
$ git remote show origin
* remote origin
  Fetch URL: git@github.com:xxx/xxx.git
  Push  URL: git@github.com:xxx/xxx.git
  HEAD branch: master
  Remote branches:
    master                 tracked
    refs/remotes/origin/b1 stale (use 'git remote prune' to remove)
  Local branch configured for 'git pull':
    master merges with remote master
  Local ref configured for 'git push':
    master pushes to master (up to date)
这时候能够看到b1是stale的，使用 git remote prune origin 可以将其从本地版本库中去除。

更简单的方法是使用这个命令，它在fetch之后删除掉没有与远程分支对应的本地分支：
$ git fetch -p

重命名远程分支
在git中重命名远程分支，其实就是先删除远程分支，然后重命名本地分支，再重新提交一个远程分支。

例如下面的例子中，我需要把 devel 分支重命名为 develop 分支：

$ git branch -av
* devel                             752bb84 Merge pull request #158 from Gwill/devel
  master                            53b27b8 Merge pull request #138 from tdlrobin/master
  zrong                             2ae98d8 modify CCFileUtils, export getFileData
  remotes/origin/HEAD               -> origin/master
  remotes/origin/add_build_script   d4a8c4f Merge branch 'master' into add_build_script
  remotes/origin/devel              752bb84 Merge pull request #158 from Gwill/devel
  remotes/origin/devel_qt51         62208f1 update .gitignore
  remotes/origin/master             53b27b8 Merge pull request #138 from tdlrobin/master
  remotes/origin/zrong              2ae98d8 modify CCFileUtils, export getFileData

删除远程分支：
$ git push --delete origin devel
To git@github.com:zrong/quick-cocos2d-x.git
 - [deleted]         devel

重命名本地分支：
git branch -m devel develop

推送本地分支：
$ git push origin develop

Counting objects: 92, done.
Delta compression using up to 4 threads.
Compressing objects: 100% (48/48), done.
Writing objects: 100% (58/58), 1.38 MiB, done.
Total 58 (delta 34), reused 12 (delta 5)
To git@github.com:zrong/quick-cocos2d-x.git
 * [new branch]      develop -> develop

然而，在 github 上操作的时候，我在删除远程分支时碰到这个错误：
$ git push --delete origin devel

remote: error: refusing to delete the current branch: refs/heads/devel
To git@github.com:zrong/quick-cocos2d-x.git
 ! [remote rejected] devel (deletion of the current branch prohibited)
error: failed to push some refs to 'git@github.com:zrong/quick-cocos2d-x.git'

这是由于在 github 中，devel 是项目的默认分支。要解决此问题，这样操作：
进入 github 中该项目的 Settings 页面；
设置 Default Branch 为其他的分支（例如 master）；
重新执行删除远程分支命令。
把本地tag推送到远程
$ git push --tags	//获取远程tag
$ git fetch origin tag <tagname>
